# frozen_string_literal: true

require 'rake'

cmd_local_container_id = 'tau docker container check existing ' \
    "#{@project['name']}_local && " \
    "docker exec #{@project['name']}_local hostname" \
    '; true'

cmd_local_container_start = 'tau docker container check existing ' \
    "#{@project['name']}_local || " \
    'docker run ' \
    '--detach ' \
    "--name #{@project['name']}_local " \
    "--network #{ENV['HOSTNAME']} " \
    '--privileged ' \
    '--rm ' \
    "#{@project['local_user']}/#{@project['name']}-%<image>s-prod" \
    '; true'

cmd_local_container_stop = 'tau docker container check existing ' \
    "#{@project['name']}_local && " \
    'docker stop ' \
    "#{@project['name']}_local" \
    '; true'

# rubocop:disable Metrics/MethodLength
namespace :local do
  namespace :container do
    images = @project['images']
    images.each do |project_image|
      image = project_image.first
      namespace image.to_sym do
        desc 'Get the local container id'
        task :id do
          @commands << format(
            cmd_local_container_id,
            image: image
          )
        end

        desc 'Start local container'
        task :start do
          @commands << format(
            cmd_local_container_start,
            image: image
          )
        end

        desc 'Stop local container'
        task :stop do
          @commands << format(
            cmd_local_container_stop,
            image: image
          )
        end
      end
    end
  end
end
# rubocop:enable Metrics/MethodLength
