# frozen_string_literal: true

require 'rake'

# rubocop:disable Metrics/BlockLength
namespace :cloud do
  namespace :gce do |gce_env|
    subtasks(gce_env.scope.path) do
      @project['pipelines'].each do |pipeline|
        namespace pipeline.to_sym do
          namespace :db do
            if defined? @gce_postgresql_database
              @gce_postgresql_database.each do |rake_task, value|
                desc value[:description].to_s
                if %i[export].include? rake_task
                  task rake_task do
                    time_stamp = Time.now.utc.strftime('%Y%m%d%H%M%S')
                    @commands << format(
                      value[:command],
                      instance: @project['google_postgresq_instance'],
                      database: @project['google_postgresql_dbname_prod'],
                      path: "#{@project['google_postgresql_backup_path_prod']}" \
                  "/#{time_stamp}_" \
                  "#{@project['google_postgresql_dbname_prod']}.sql.gz"
                    )
                  end
                elsif %i[import].include? rake_task
                  task rake_task, [:file] do |_task, args|
                    @commands << format(
                      value[:command],
                      instance: @project['google_postgresq_instance'],
                      database: @project['google_postgresql_dbname_prod'],
                      path: "#{@project['google_postgresql_backup_path_prod']}" \
                  "/#{args[:file]}"
                    )
                  end
                else
                  task rake_task do
                    @commands << format(
                      value[:command],
                      instance: @project['google_postgresq_instance'],
                      database: @project['google_postgresql_dbname_prod'],
                      user: @project['google_postgresql_username_prod']
                    )
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
# rubocop:enable Metrics/BlockLength
